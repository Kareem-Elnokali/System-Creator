# Generated by Django 5.2.5 on 2025-08-26 15:47

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.PositiveSmallIntegerField(default=1, editable=False, primary_key=True, serialize=False)),
                ('service_name', models.CharField(default='MFA Service', max_length=100)),
                ('service_description', models.TextField(blank=True)),
                ('max_tenants_per_user', models.PositiveIntegerField(default=5)),
                ('default_user_limit', models.PositiveIntegerField(default=100)),
                ('default_auth_limit', models.PositiveIntegerField(default=1000)),
                ('allow_free_plan', models.BooleanField(default=True)),
                ('require_email_verification', models.BooleanField(default=True)),
                ('require_domain_verification', models.BooleanField(default=False)),
                ('admin_email', models.EmailField(max_length=254)),
                ('send_usage_alerts', models.BooleanField(default=True)),
                ('send_security_alerts', models.BooleanField(default=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'System Settings',
                'verbose_name_plural': 'System Settings',
            },
        ),
        migrations.CreateModel(
            name='MFATenant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Website/Application name', max_length=200)),
                ('domain', models.CharField(help_text='Primary domain (e.g., example.com)', max_length=255, unique=True)),
                ('additional_domains', models.JSONField(blank=True, default=list, help_text='Additional allowed domains')),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_name', models.CharField(max_length=100)),
                ('plan', models.CharField(choices=[('free', 'Free Plan'), ('basic', 'Basic Plan'), ('premium', 'Premium Plan'), ('enterprise', 'Enterprise Plan')], default='free', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended'), ('pending', 'Pending Setup'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('api_key', models.CharField(editable=False, max_length=64, unique=True)),
                ('api_secret', models.CharField(editable=False, max_length=128)),
                ('max_users', models.PositiveIntegerField(default=100, help_text='Maximum users allowed')),
                ('max_monthly_authentications', models.PositiveIntegerField(default=1000)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('settings', models.JSONField(default=dict, help_text='Custom tenant settings')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_tenants', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MFASystemConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mfa_system_url', models.URLField(help_text='URL of the MFA system API')),
                ('connection_key', models.CharField(help_text='Key for connecting to MFA system', max_length=128)),
                ('is_connected', models.BooleanField(default=False)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('connection_status', models.CharField(default='pending', max_length=50)),
                ('total_users', models.PositiveIntegerField(default=0)),
                ('active_users', models.PositiveIntegerField(default=0)),
                ('total_authentications', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mfa_connection', to='system_creator.mfatenant')),
            ],
        ),
        migrations.CreateModel(
            name='TenantAPILog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('endpoint', models.CharField(max_length=200)),
                ('method', models.CharField(max_length=10)),
                ('status_code', models.PositiveSmallIntegerField()),
                ('response_time_ms', models.PositiveIntegerField()),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_logs', to='system_creator.mfatenant')),
            ],
        ),
        migrations.CreateModel(
            name='TenantFeatures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable_totp', models.BooleanField(default=True)),
                ('enable_email', models.BooleanField(default=True)),
                ('enable_sms', models.BooleanField(default=False)),
                ('enable_passkeys', models.BooleanField(default=False)),
                ('enable_backup_codes', models.BooleanField(default=True)),
                ('enable_risk_analysis', models.BooleanField(default=False)),
                ('enable_device_tracking', models.BooleanField(default=False)),
                ('enable_geo_blocking', models.BooleanField(default=False)),
                ('enable_session_management', models.BooleanField(default=False)),
                ('enable_audit_logs', models.BooleanField(default=True)),
                ('allow_custom_branding', models.BooleanField(default=False)),
                ('allow_custom_domains', models.BooleanField(default=False)),
                ('allow_webhook_notifications', models.BooleanField(default=False)),
                ('api_rate_limit_per_minute', models.PositiveIntegerField(default=60)),
                ('api_rate_limit_per_hour', models.PositiveIntegerField(default=1000)),
                ('priority_support', models.BooleanField(default=False)),
                ('dedicated_support', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='system_creator.mfatenant')),
            ],
        ),
        migrations.CreateModel(
            name='TenantNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('info', 'Information'), ('warning', 'Warning'), ('error', 'Error'), ('billing', 'Billing'), ('security', 'Security Alert')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='system_creator.mfatenant')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TenantUsageStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric', models.CharField(choices=[('active_users', 'Active Users'), ('authentications', 'Authentication Attempts'), ('api_calls', 'API Calls'), ('storage_used', 'Storage Used (MB)'), ('bandwidth_used', 'Bandwidth Used (MB)')], max_length=50)),
                ('value', models.PositiveIntegerField()),
                ('date', models.DateField()),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_stats', to='system_creator.mfatenant')),
            ],
        ),
        migrations.AddIndex(
            model_name='mfatenant',
            index=models.Index(fields=['domain'], name='system_crea_domain_c46d84_idx'),
        ),
        migrations.AddIndex(
            model_name='mfatenant',
            index=models.Index(fields=['status'], name='system_crea_status_857693_idx'),
        ),
        migrations.AddIndex(
            model_name='mfatenant',
            index=models.Index(fields=['plan'], name='system_crea_plan_589b24_idx'),
        ),
        migrations.AddIndex(
            model_name='tenantapilog',
            index=models.Index(fields=['tenant', 'timestamp'], name='system_crea_tenant__d06410_idx'),
        ),
        migrations.AddIndex(
            model_name='tenantapilog',
            index=models.Index(fields=['status_code'], name='system_crea_status__44211e_idx'),
        ),
        migrations.AddIndex(
            model_name='tenantusagestats',
            index=models.Index(fields=['tenant', 'metric', 'date'], name='system_crea_tenant__0dcaf8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='tenantusagestats',
            unique_together={('tenant', 'metric', 'date')},
        ),
    ]
